# Example YAML jobconfig for bzfs_joblauncher.
# Replicates two datasets from hostA to hostB with a simple retention policy.

# List of (src_dataset, dst_dataset) pairs; each pair lists source then destination.
root_dataset_pairs:
  - [tank1/foo, tank1/foo]  # replicate to same name on hostB
  - [tank1/bar, tank1/bar]  # replicate to same name on hostB

# Include child datasets below each pair.
recursive: true

# Source hostnames; one per physical machine that takes snapshots.
src_hosts:
  - hostA

# Map destination hostnames to logical target names used in snapshot names.
dst_hosts:
  hostB:
    - offsite

# Targets to retain on each destination host; usually the same as dst_hosts.
retain_dst_targets:
  hostB:
    - offsite

# Prefix prepended to each dataset on the destination host.
dst_root_datasets:
  hostB: ""  # empty string keeps original dataset names

# Retention periods for snapshots to be used if pruning src, and when creating new snapshots on src.
# For example, "daily": 31 specifies to retain all daily snapshots that were created less than 31 days ago, and
# ensure that the latest 31 daily snapshots (per dataset) are retained regardless of creation time.
# A zero or missing retention period indicates that no snapshots shall be retained (or even be created) for the given period.
# Each target of each organization can have separate retention periods.
# Uses snapshot names like 'prod_onsite_<timestamp>_daily', 'prod_onsite_<timestamp>_minutely', etc.:
src_snapshot_plan:
  prod:
    offsite:
      "5minutely": 10
      hourly: 72
      daily: 90

# Retention periods for snapshots to be used if pruning dst. Has same format as --src-snapshot-plan:
dst_snapshot_plan:
  prod:
    offsite:
      "5minutely": 10
      hourly: 72
      daily: 90

# Retention periods for bookmarks to be used if pruning src. Has same format as --src-snapshot-plan:
src_bookmark_plan:
  prod:
    offsite:
      "5minutely": 10
      hourly: 72
      daily: 90

# Snapshot monitoring plan; alerts if snapshots fall behind schedule.
monitor_snapshot_plan:
  prod:
    offsite:
      "5minutely":
        warning: "15 minutes"
        critical: "30 minutes"
      hourly:
        warning: "3 hours"
        critical: "6 hours"
      daily:
        warning: "2 days"
        critical: "4 days"

# Max worker jobs to run in parallel at any time; specified as a positive integer, or as a percentage of num CPU cores:
workers: "100%"  # aka max_workers = 1.0 * num_cores

# Reduce bandwidth spikes by evenly spreading the start of worker jobs over this much time; 0 disables this feature:
work_period_seconds: 0

# Randomize job start time and host order to avoid potential thundering herd problems in large distributed systems.
# Randomizing job start time is only relevant if --work-period-seconds > 0.
jitter: false  # don't randomize

# If this much time has passed after a worker process has started executing, kill the straggling worker. Other workers remain
# unaffected. A value of null disables this feature:
worker_timeout_seconds: null

# Extra command line arguments forwarded to bzfs_jobrunner.
extra_args: []
